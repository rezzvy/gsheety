class Gsheety{static parseURL(t){let e=t.match(/\/d\/([^/]+)/);if(!e)throw Error("Invalid Google Sheets URL");return`https://docs.google.com/spreadsheets/d/${e[1]}`}static async fetchJSON(t,e){let{sheet:a="Sheet1",query:s="SELECT *"}=e,r=await fetch(`${this.parseURL(t)}/gviz/tq?sheet=${encodeURIComponent(a)}&tq=${encodeURIComponent(s)}`);if(r.ok){let o=await r.text(),l=JSON.parse(o.slice(o.indexOf("{"),o.lastIndexOf("}")+1));return l.table?{data:l,msg:"ok"}:{data:null,msg:"Invalid query or empty response"}}return{data:null,msg:`HTTP Error ${r.status}: ${r.statusText}`}}static async get(t,e={}){if("object"!=typeof e)throw Error("Options parameter must be an object");let a=await this.fetchJSON(t,e);return a.data?e.raw?a:{cols:a.data.table.cols.map(t=>t?{label:t.label,type:t.type}:null),rows:a.data.table.rows.map(t=>t.c.map(t=>t?t.v:null))}:{cols:[],rows:[],msg:a.msg}}static async getExportedData(t,e="csv"){let a={csv:"export?format=csv",tsv:"export?format=tsv",pdf:"export?format=pdf",xlsx:"export?format=xlsx"};if(!a[e])throw Error("Unsupported format. Use: csv, tsv, pdf, or xlsx.");let s=await fetch(`${this.parseURL(t)}/${a[e]}`);if(!s.ok)throw Error(`HTTP Error ${s.status}: ${s.statusText}`);return"pdf"===e||"xlsx"===e?await s.blob():await s.text()}}"undefined"!=typeof module&&module.exports?module.exports=Gsheety:window.Gsheety=Gsheety;